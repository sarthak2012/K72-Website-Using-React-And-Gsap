React router dom
main.js is the parent of app.jsx
<BrowserRouter>
      <App />
    </BrowserRouter>


    flex-direction: column
Arranges flex items vertically (stacked on top of each other) instead of horizontally
Only works when applied to an element that's already a flex container

npm  i gsap
npm  i @gsap/react
useref in Agence.jsx


  const imageDivRef = useRef(null);
  const currentPath = useLocation().pathname
usecontext



@import "tailwindcss";

@font-face {
    font-family: 'font1';
    src: url('/Fonts/Lausanne-300.woff2') format('woff2');
}

@font-face {
    font-family: 'font2';
    src: url('/Fonts/Lausanne-500.woff2') format('woff2');
}

body {
    background-color: black;
}

.moveX{
    animation-name: moveAnimation;
    animation-duration: 10s;
    animation-iteration-count: infinite;
    animation-timing-function: linear;
}

.moveLink{
    opacity: 0;
    transition: all ease 0.3s;
}

.link:hover .moveLink{
    opacity: 1;
}

@keyframes moveAnimation {
    from{
        transform: translateX(0);
    }
    to{
        transform: translateX(-100%);
    }
}


<div>
      <Navbar />
      <FullScreenNav />
      <Routes>
        <Route path="/" element={<Home />} />
        <Route path="/agence" element={<Agence />} />
        <Route path="/projects" element={<Projects />} />
      </Routes>
    </div>
  );
};

export default App;


import React, { createContext, useEffect, useState } from 'react'
import { useLocation } from 'react-router-dom'

export const NavbarContext = createContext()
export const NavbarColorContext = createContext()

const NavContext = ({ children }) => {

    const [navColor, setNavColor] = useState('white')
    
    const [navOpen, setNavOpen] = useState(false)

    const locate = useLocation().pathname
    useEffect(function(){
        if(locate == '/projects' || locate == '/agence'){
            setNavColor('black')
        }else{
            setNavColor('white')
        }
    },[locate])
    

    return (
        <div>
            <NavbarContext.Provider value={[navOpen, setNavOpen]}>
                <NavbarColorContext.Provider value={[navColor,setNavColor]}>
                    {children}
                </NavbarColorContext.Provider>
            </NavbarContext.Provider>
        </div>
    )
}

export default NavContext